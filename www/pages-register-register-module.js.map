{"version":3,"sources":["webpack:///./src/app/pages/register/register.module.ts","webpack:///./src/app/pages/register/register.page.html","webpack:///./src/app/pages/register/register.page.scss","webpack:///./src/app/pages/register/register.page.ts"],"names":[],"mappings":"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","file":"pages-register-register-module.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule { }\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Sign Up</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen=\\\"true\\\">\\n  <ion-grid>\\n    <ion-row class=\\\"form-row\\\">\\n      <ion-col>\\n        <ion-list>\\n          <form novalidate [formGroup]=\\\"user\\\">\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">First Name</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"firstName\\\">\\n              </ion-input>\\n            </ion-item>\\n\\n            <!-- First name error message -->\\n            <ng-container *ngFor=\\\"let error of error_messages.firstName\\\">\\n              <div class=\\\"error\\\"\\n                *ngIf=\\\"user.get('firstName').hasError(error.type) && (user.get('firstName').dirty || user.get('firstName').touched)\\\">\\n                {{ error.message }}\\n              </div>\\n            </ng-container>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Last Name</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"lastName\\\">\\n              </ion-input>\\n            </ion-item>\\n\\n            <!-- Last name error message -->\\n            <ng-container *ngFor=\\\"let error of error_messages.lastName\\\">\\n              <div class=\\\"error\\\"\\n                *ngIf=\\\"user.get('lastName').hasError(error.type) && (user.get('lastName').dirty || user.get('lastName').touched)\\\">\\n                {{ error.message }}\\n              </div>\\n            </ng-container>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Email</ion-label>\\n              <ion-input type=\\\"email\\\" formControlName=\\\"email\\\">\\n              </ion-input>\\n            </ion-item>\\n\\n            <!-- Email error message -->\\n            <ng-container *ngFor=\\\"let error of error_messages.email\\\">\\n              <div class=\\\"error\\\"\\n                *ngIf=\\\"user.get('email').hasError(error.type) && (user.get('email').dirty || user.get('email').touched)\\\">\\n                {{ error.message }}\\n              </div>\\n            </ng-container>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Password</ion-label>\\n              <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n            </ion-item>\\n\\n            <!-- Password error message -->\\n            <ng-container *ngFor=\\\"let error of error_messages.password\\\">\\n              <div class=\\\"error\\\"\\n                *ngIf=\\\"user.get('password').hasError(error.type) && (user.get('password').dirty || user.get('password').touched)\\\">\\n                {{ error.message }}\\n              </div>\\n            </ng-container>\\n\\n            <ion-row class=\\\"button-row\\\">\\n              <ion-col text-center>\\n                <ion-button expand=\\\"full\\\" fill=\\\"solid\\\" color=\\\"primary\\\" (click)=\\\"submit()\\\">\\n                  SIGN UP\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </form>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\\n\"","module.exports = \"ion-header {\\n  -webkit-backdrop-filter: blur(8px);\\n          backdrop-filter: blur(8px); }\\n\\nion-toolbar {\\n  --ion-toolbar-background: rgba(255, 255, 255, 0.2);\\n  --color: #fff; }\\n\\nion-back-button {\\n  --color: #fff; }\\n\\nion-content {\\n  width: 100%;\\n  --background: none;\\n  --background: #43cea2;\\n  --background: -webkit-linear-gradient(to left, #185a9d, #43cea2);\\n  --background: linear-gradient(to left, #185a9d, #43cea2); }\\n\\nion-grid {\\n  width: 100%; }\\n\\n.form-row {\\n  margin-top: 2.5rem;\\n  padding: 0;\\n  border-radius: 10px;\\n  background: rgba(255, 255, 255, 0.2);\\n  box-shadow: 0px 3px 3px 1px rgba(0, 0, 0, 0.25); }\\n\\n.button-row {\\n  margin-top: 2rem; }\\n\\nion-list {\\n  margin-right: 0.3rem;\\n  margin-left: 0.3rem;\\n  --ion-item-background: transparent; }\\n\\nion-list ion-item {\\n    margin: 0.5rem auto;\\n    --background: transparent;\\n    color: #fff; }\\n\\nion-list ion-item ion-label {\\n      font-weight: 300; }\\n\\nion-list ion-item ion-input {\\n      color: #fff; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvRDpcXFNvZnR3YXJlIFByb2plY3RzXFxOb2RlLmpzXFxMZXRzTWVldC9zcmNcXGFwcFxccGFnZXNcXHJlZ2lzdGVyXFxyZWdpc3Rlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQ0FBMEI7VUFBMUIsMEJBQTBCLEVBQUE7O0FBRzVCO0VBQ0Usa0RBQXlCO0VBQ3pCLGFBQVEsRUFBQTs7QUFHVjtFQUNFLGFBQVEsRUFBQTs7QUFHVjtFQUNFLFdBQVc7RUFDWCxrQkFBYTtFQUNiLHFCQUFhO0VBQ2IsZ0VBQWE7RUFDYix3REFBYSxFQUFBOztBQUdmO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixtQkFBbUI7RUFDbkIsb0NBQW9DO0VBQ3BDLCtDQUErQyxFQUFBOztBQUdqRDtFQUNFLGdCQUFnQixFQUFBOztBQUdsQjtFQUNFLG9CQUFvQjtFQUNwQixtQkFBbUI7RUFDbkIsa0NBQXNCLEVBQUE7O0FBSHhCO0lBTUksbUJBQW1CO0lBQ25CLHlCQUFhO0lBQ2IsV0FBVyxFQUFBOztBQVJmO01BV00sZ0JBQWdCLEVBQUE7O0FBWHRCO01BZU0sV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWhlYWRlciB7XHJcbiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDhweCk7XHJcbn1cclxuXHJcbmlvbi10b29sYmFyIHtcclxuICAtLWlvbi10b29sYmFyLWJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcclxuICAtLWNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG5pb24tYmFjay1idXR0b24ge1xyXG4gIC0tY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbmlvbi1jb250ZW50IHtcclxuICB3aWR0aDogMTAwJTtcclxuICAtLWJhY2tncm91bmQ6IG5vbmU7XHJcbiAgLS1iYWNrZ3JvdW5kOiAjNDNjZWEyO1xyXG4gIC0tYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG8gbGVmdCwgIzE4NWE5ZCwgIzQzY2VhMik7XHJcbiAgLS1iYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gbGVmdCwgIzE4NWE5ZCwgIzQzY2VhMik7XHJcbn1cclxuXHJcbmlvbi1ncmlkIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmZvcm0tcm93IHtcclxuICBtYXJnaW4tdG9wOiAyLjVyZW07XHJcbiAgcGFkZGluZzogMDtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcclxuICBib3gtc2hhZG93OiAwcHggM3B4IDNweCAxcHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcclxufVxyXG5cclxuLmJ1dHRvbi1yb3cge1xyXG4gIG1hcmdpbi10b3A6IDJyZW07XHJcbn1cclxuXHJcbmlvbi1saXN0IHtcclxuICBtYXJnaW4tcmlnaHQ6IDAuM3JlbTtcclxuICBtYXJnaW4tbGVmdDogMC4zcmVtO1xyXG4gIC0taW9uLWl0ZW0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcblxyXG4gIGlvbi1pdGVtIHtcclxuICAgIG1hcmdpbjogMC41cmVtIGF1dG87XHJcbiAgICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gICAgY29sb3I6ICNmZmY7XHJcblxyXG4gICAgaW9uLWxhYmVsIHtcclxuICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIH1cclxuXHJcbiAgICBpb24taW5wdXQge1xyXG4gICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AlertController, NavController } from '@ionic/angular';\nimport { AuthenticationService } from 'src/app/services/helpers/authentication.service';\nimport { User } from 'src/app/services/models/user';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  user: FormGroup;\n  error_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required' },\n      { type: 'pattern', message: 'Enter a valid email' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required' },\n      { type: 'minlength', message: 'Password must be at least 5 characters long' },\n      { type: 'pattern', message: 'Your password must contain at least one uppercase, one lowercase, and one number' }\n    ],\n    'firstName': [\n      { type: 'required', message: 'First name is required' }\n    ],\n    'lastName': [\n      { type: 'required', message: 'Last name is required' }\n    ],\n  };\n\n  constructor(private navController: NavController, private authService: AuthenticationService, private formBuilder: FormBuilder,\n    public alertCtrl: AlertController, private userService: UserService) {\n  }\n\n  ngOnInit() {\n    this.createFormGroup();\n  }\n\n  createFormGroup() {\n    this.user = this.formBuilder.group({\n      firstName: new FormControl('', {\n        validators: Validators.compose([\n          Validators.required\n        ]), updateOn: 'blur'\n      }),\n      lastName: new FormControl('', {\n        validators: Validators.compose([\n          Validators.required\n        ]), updateOn: 'blur'\n      }),\n      email: new FormControl('', {\n        validators: Validators.compose([\n          Validators.required,\n          Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n        ]), updateOn: 'blur'\n      }),\n      password: new FormControl('', {\n        validators: Validators.compose([\n          Validators.required,\n          Validators.minLength(5),\n          Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n        ]), updateOn: 'blur'\n      }),\n    });\n  }\n\n  async submit() {\n    const credentials = { email: this.user.controls.email.value, password: this.user.controls.password.value };\n    await this.authService.signUp(credentials)\n      .then(async (response: firebase.auth.UserCredential) => {\n        let showAlert = false;\n\n        // Create user in database\n        if (response) {\n          this.createUser(response.user.uid).then((result) => showAlert = result);\n        }\n\n        // Show success alert\n        if (showAlert) {\n          const alert = await this.alertCtrl.create({\n            header: 'Success',\n            message: 'Sign up was successful!',\n            buttons: ['OK']\n          });\n          await alert.present();\n        }\n        this.navController.navigateBack(['sign-in']);\n      }, (rejected: firebase.auth.Error) => { throw rejected; });\n  }\n\n  createUser(uid: string): Promise<boolean> {\n    const newUser: User = {\n      uid: uid,\n      color: '',\n      avatar: '',\n      firstName: this.user.controls.firstName.value,\n      lastName: this.user.controls.lastName.value\n    };\n\n    return this.userService.addUser(newUser);\n  }\n\n}\n"],"sourceRoot":""}